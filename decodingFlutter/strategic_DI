이를 위해 Provider, Riverpod, get_it과 같은 패키지를 사용하여 의존성 주입을 관리합니다.  
전략 패턴은 특정 계열의 알고리즘들을 정의하고, 각 알고리즘을 캡슐화하며, 이들을 상호 교체 가능하게 만드는 행위 디자인 패턴입니다. 즉, 클라이언트 코드의 변경 없이 런타임에 알고리즘을 동적으로 변경할 수 있게 해줍니다.
  
    목적: 복잡한 if-else나 switch 문을 피하고, 알고리즘(전략)을 유연하게 교체하는 것이 핵심입니다.
  
    관점: 행위적 관점에 가깝습니다. "객체가 어떻게 행동할 것인가?"에 대한 문제입니다.
  
    주입 대상: 특정 인터페이스를 구현하는 알고리즘(전략) 객체입니다.

*. curogom.tistory.com 글에서 영감을 받아 제미니와 함께 작성하였습니다   
